---
import Layout from "../layouts/Layout.astro"
import { API_URL } from "astro:env/server"
import "../styles/global.css"

const response = await fetch(`${API_URL}ligas`);

const ligas = await response.json();

const juegos = await fetch(`${API_URL}juegos`);

const juegosData = await juegos.json();
---

<Layout titulo="Ligas" descripcion="Descubre y sigue tus ligas favoritas, mira sus estadisticas y puntuaciones">
  <div class="max-w-6xl mx-auto px-4 py-10 text-center">
    <div class="flex gap-6 items-center justify-center">
      <form id="formFiltrado" class="flex flex-row items-center mt-10 mb-6 gap-6 flex-wrap justify-center">

        <div>
          <label class="block mb-2 text-left text-sm font-medium text-texto-secundario">Filtrar por:</label>
          <select name="ordenarPor" class="w-full max-w-md p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 mb-6">
            <option class="text-texto-secundario" value="">Selecciona una opci√≥n</option>
            <option class="text-texto-secundario" value="activo">Activo el evento</option>
            <option class="text-texto-secundario" value="no activo">No activo el evento</option>
          </select>
        </div>

        <div>
          <label class="block mb-2 text-left text-sm font-medium text-texto-secundario">Tipo de deporte:</label>
          <select name="tipoDeporte" class="w-full max-w-md p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 mb-6">
            <option class="text-texto-secundario" value="">Selecciona una opci√≥n</option>
            {
              juegosData.map((juego: any) => {
                return <option class="text-texto-secundario" value={juego.id}>{juego.nombre}</option>
              })
            }
          </select>
        </div>
 
        <input type="submit" value="Filtrar" class="px-4 py-2 bg-terciario text-white rounded-lg hover:bg-blue-700 transition duration-200"/>
      </form>

      <form id="busqueda" class="flex flex-row items-center mt-10 mb-6 gap-6 justify-center">
        <input type="text" name="buscar" placeholder="Buscar liga..." class="w-full max-w-md p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" />
        <input type="submit" class="px-4 py-2 h-max bg-terciario text-white rounded-lg hover:bg-blue-700 transition duration-200"></input>
      </form>

    </div>

    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 items-start" id="resultados">
      {ligas.map((liga: any) => {
        return <div class="w-full max-w-sm mx-auto bg-gradient-to-t from-slate-950 to-slate-800 rounded-2xl shadow-md hover:shadow-lg transition duration-300 p-6 flex flex-col items-center">
          <img transition:name={`img-${liga.nombre}`} class="w-60 h-auto object-contain mb-4" src={liga.url_foto} alt={liga.nombre}/>
          <h3 class="text-lg font-bold mb-2 text-primario">{liga.nombre}</h3>
          <p class="text-sm text-texto-primario"><strong>Estado: </strong> {liga.estado === "activo" ? `üü¢ ${liga.estado}` : `üî¥ ${liga.estado}`}</p>
          <p class="text-sm text-texto-primario">üèüÔ∏è <strong>Tipo de juego: </strong>{liga.tipo_juego}</p>
          <a href={`/liga_${liga.nombre}`} class="mt-2 px-4 py-1 h-max bg-terciario text-white rounded-lg hover:bg-blue-700 transition duration-200">Ver m√°s</a>
        </div>
      })}
    </div>
  </div>
</Layout>

<script>
  const formBusqueda = document.getElementById('busqueda') as HTMLFormElement;
  const formFiltrado = document.getElementById('formFiltrado') as HTMLFormElement;
  const resultados = document.getElementById('resultados') as HTMLDivElement;

  const imprimirResultados = (ligas: any[]) => {
    resultados.innerHTML = '';

    if (!ligas || ligas.length === 0) {
      resultados.innerHTML = '<p class="text-texto-primario text-center col-start-2">No se encontraron ligas.</p>';
      return;
    }

    ligas.forEach((liga) => {
      const div = document.createElement('div');
      div.className = 'w-full max-w-sm mx-auto bg-gradient-to-t from-slate-950 to-slate-800 rounded-2xl shadow-md hover:shadow-lg transition duration-300 p-6 flex flex-col items-center';
      div.innerHTML = `
        <img class="w-60 h-auto object-contain mb-4" src="${liga.url_foto}" alt="${liga.nombre}"/>
        <h3 class="text-lg font-bold mb-2 text-primario">${liga.nombre}</h3>
        <p class="text-sm text-texto-primario"><strong>Estado: </strong> ${liga.estado === "activo" ? `üü¢ ${liga.estado}` : `üî¥ ${liga.estado}`}</p>
        <p class="text-sm text-texto-primario">üèüÔ∏è <strong>Tipo de juego: </strong>${liga.tipo_juego}</p>
        <a href="/liga_${liga.nombre}" class="mt-2 px-4 py-1 h-max bg-terciario text-white rounded-lg hover:bg-blue-700 transition duration-200">Ver m√°s</a>
      `;
      resultados.appendChild(div);
    });
  };

  formBusqueda.addEventListener('submit', async (event) => {
    event.preventDefault();
    const botonBuscar = formBusqueda.querySelector('input[type="submit"]') as HTMLInputElement;
    botonBuscar.disabled = true;

    resultados.innerHTML = '<p class="text-texto-primario text-center col-start-2">Buscando.... ‚è≥</p>';

    const datos = new FormData(formBusqueda);
    const { buscar } = Object.fromEntries(datos.entries());

    if (!buscar) {
      resultados.innerHTML = '<p class="col-start-2 text-texto-primario text-center">Por favor, ingresa un nombre de liga o al menos una letra para realizar la b√∫squeda.</p>';
      botonBuscar.disabled = false;
      return;
    }

    try {
      const res = await fetch(`/api/ligas?buscar=${buscar}`);
      const ligas = await res.json();
      imprimirResultados(ligas);
    } catch (error) {
      resultados.innerHTML = '<p class="text-texto-primario text-center col-start-2">Error al buscar ligas.</p>';
    } finally {
      botonBuscar.disabled = false;
    }
  });

  formFiltrado.addEventListener('submit', async (event) => {
    event.preventDefault();
    const botonFiltrar = formFiltrado.querySelector('input[type="submit"]') as HTMLInputElement;
    botonFiltrar.disabled = true;

    resultados.innerHTML = '<p class="text-texto-primario text-center col-start-2">Filtrando.... ‚è≥</p>';

    const datos = new FormData(formFiltrado);
    const filtros = Object.fromEntries(datos.entries());

    const params = new URLSearchParams();

    if (filtros.ordenarPor) params.append('ordenarPor', filtros.ordenarPor as string);
    if (filtros.tipoDeporte) params.append('tipoDeporte', filtros.tipoDeporte as string);

    try {
      const res = await fetch(`/api/ligas?${params.toString()}`);
      const ligas = await res.json();
      imprimirResultados(ligas);
    } catch (error) {
      resultados.innerHTML = '<p class="text-texto-primario text-center col-start-2">Error al filtrar ligas.</p>';
    } finally {
      botonFiltrar.disabled = false;
    }
  });
</script>
