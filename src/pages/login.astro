---
import Layout from "../layouts/Layout.astro"
import "../styles/global.css"
---

<Layout titulo="Login" descripcion="Página de login">
    <main class="flex flex-col items-center justify-center">
        <div class="flex flex-col items-center justify-center shadow-sm bg-linear-to-t from-slate-950 to-slate-900 rounded-2xl pt-8">
            <h1 class="text-3xl">Iniciar Sessión</h1>
            <p id="errorMessage" class="text-red-400 mt-4 mb-2"></p>
            <form class="p-8 w-[350px]">
                <label for="email" class="text-primario">Correo Electronico</label>
                <input type="email" id="email" name="email" class="pl-2 mt-1 w-full border border-gray-300 rounded-md shadow-sm focus:ring transition-all focus:ring-blue-500 mb-8" autocomplete="email" required />
                
                <label for="password" class="text-primario">Contraseña</label>
                <input type="password" id="password" name="password" class="pl-2 mt-1 w-full border border-gray-300 rounded-md shadow-sm focus:ring transition-all focus:ring-blue-500 mb-8" autocomplete="current-password" required />
                <input type="submit" value="Iniciar Sessión" class="w-full bg-blue-600 text-white px-4 py-2 rounded-md cursor-pointer hover:bg-blue-700 transition-all" />
            </form>
        </div>
        <p class="mt-4">¿No tienes una cuenta? Crea una cuenta <a href="/sing-up" class="underline text-blue-600">aqui</a></p>
    </main>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.querySelector('form') as HTMLFormElement;
    const boton = document.querySelector('input[type="submit"]') as HTMLInputElement;
    const errorEl = document.getElementById('errorMessage') as HTMLParagraphElement;

    form.addEventListener('submit', async (event) => {
      event.preventDefault();
      boton.disabled = true;
      errorEl.textContent = ''; // Limpiar error previo

      const datosForm = new FormData(form);
      const email = (datosForm.get('email') as string)?.trim();
      const password = datosForm.get('password') as string;

      // Validación manual
      if (!email || !password) {
        errorEl.textContent = 'Todos los campos son obligatorios.';
        boton.disabled = false;
        return;
      }

      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailRegex.test(email)) {
        errorEl.textContent = 'El correo electrónico no es válido.';
        boton.disabled = false;
        return;
      }

      if (password.length < 8) {
        errorEl.textContent = 'La contraseña debe tener al menos 8 caracteres.';
        boton.disabled = false;
        return;
      }

      try {
        const response = await fetch('/api/login', {
          method: 'POST',
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json',
          },
          credentials: 'include',
          body: JSON.stringify({ email, password })
        });

        const data = await response.json();

        if (!response.ok) {
          errorEl.textContent = data.message || 'Credenciales incorrectas.';
          boton.disabled = false;
          return;
        }

        window.location.href = '/usuario';
      } catch (err) {
        console.error('Error:', err);
        errorEl.textContent = 'Error de red. Intenta nuevamente.';
      } finally {
        boton.disabled = false;
      }
    });
  });
</script>


