---
import Layout from "../layouts/Layout.astro"
import { API_URL, API_KEY } from 'astro:env/server';
import "../styles/global.css"

const cookies = Astro.cookies
const token = cookies.get('token')?.value

if (!token) {
  return Astro.redirect('/login')
}

const res = await fetch(`${API_URL}usuario`, {
  headers: {
    'Authorization': `Bearer ${token}`,
    'x-api-key': API_KEY,
  }
})

if (!res.ok) {
  return Astro.redirect('/login')
}

const datosUsuario = await res.json()
---

<Layout titulo="Usuario" descripcion="P√°gina de usuario">
  <main>
    <section class="text-primario px-4 pt-16 flex items-center justify-center mb-5">
      <div class="w-full max-w-2xl bg-gradient-to-t from-slate-950 to-slate-900 rounded-2xl shadow-2xl p-8">
        <div class="flex justify-between items-center mb-8 border-b border-white/10 pb-4">
          <h1 class="text-2xl font-bold text-white">üë§ Mi Perfil</h1>
          <a href="/api/logout" class="text-sm text-red-400 hover:underline">Cerrar sesi√≥n</a>
        </div>

        <div class="grid gap-6">
          <div class="flex flex-col">
            <span class="text-sm text-gray-400">Nombre</span>
            <span class="text-lg font-medium text-white">
              {datosUsuario.nombre ?? "Sin nombre"}
            </span>
          </div>

          <div class="flex flex-col">
            <span class="text-sm text-gray-400">Correo electr√≥nico</span>
            <span class="text-lg font-medium text-white">{datosUsuario.email}</span>
          </div>

          <div class="flex flex-col">
            <span class="text-sm text-gray-400">Rol</span>
            <span class="text-lg font-medium text-white">{datosUsuario.rol}</span>
          </div>

          <div class="flex flex-col">
            <span class="text-sm text-gray-400">Usuario desde</span>
            <span class="text-lg font-medium text-white">
              {new Date(datosUsuario.fecha_registro).toLocaleDateString('es-ES', {
                day: 'numeric',
                month: 'long',
                year: 'numeric'
              })}
            </span>
          </div>
        </div>

        <div class="mt-10 pt-6 border-t border-white/10">
          <details class="mb-4">
            <summary class="text-lg font-semibold text-white cursor-pointer">üìå Seguimientos</summary>
            <div class="mt-4 grid gap-6">
              <div>
                <h3 class="text-sm text-gray-400 mb-1">üèüÔ∏è Equipos</h3>
                {
                  datosUsuario.equipos.length > 0
                    ? datosUsuario.equipos.map((e: { nombre: string }) => (
                        <div class="text-white">{e.nombre}</div>
                      ))
                    : <div class="text-gray-500 italic">Vaya, a√∫n no sigues a ning√∫n equipo.</div>
                }
              </div>

              <div>
                <h3 class="text-sm text-gray-400 mb-1">üéÆ Jugadores</h3>
                {
                  datosUsuario.jugadores.length > 0
                    ? datosUsuario.jugadores.map((j: { nickname: string }) => (
                        <div class="text-white">{j.nickname}</div>
                      ))
                    : <div class="text-gray-500 italic">Vaya, a√∫n no sigues a ning√∫n jugador.</div>
                }
              </div>

              <div>
                <h3 class="text-sm text-gray-400 mb-1">üìÖ Eventos</h3>
                {
                  datosUsuario.eventos.length > 0
                    ? datosUsuario.eventos.map((ev: any) => (
                        <div class="text-white">{ev.nombre}</div>
                      ))
                    : <div class="text-gray-500 italic">Vaya, a√∫n no sigues a ning√∫n evento.</div>
                }
              </div>
            </div>
          </details>
        </div>

        <div class="mt-10 pt-6 border-t border-white/10">
          <h2 class="text-xl font-semibold text-white mb-4">üîê Cambiar Contrase√±a</h2>
          <form class="grid gap-4">
            <input type="password" name="contrase√±a_actual" placeholder="Contrase√±a actual" class="bg-[#334155] rounded-xl px-4 py-2 text-white placeholder-gray-400 focus:ring-2 focus:ring-[#4C5FD5] outline-none" />
            <input type="password" name="contrase√±a_nueva" placeholder="Nueva contrase√±a" class="bg-[#334155] rounded-xl px-4 py-2 text-white placeholder-gray-400 focus:ring-2 focus:ring-[#4C5FD5] outline-none" />
            <input type="password" name="contrase√±a_repetida" placeholder="Confirmar nueva contrase√±a" class="bg-[#334155] rounded-xl px-4 py-2 text-white placeholder-gray-400 focus:ring-2 focus:ring-[#4C5FD5] outline-none" />
            <input type="submit" class="bg-[#4C5FD5] hover:bg-[#3b4bbc] transition-all text-white px-6 py-3 rounded-xl font-semibold mt-2" value="Guardar Contrase√±a" />
          </form>
        </div>
      </div>
    </section>
  </main>
</Layout>

<script>
  window.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('form') as HTMLFormElement;
    const boton = document.querySelector('input[type="submit"]') as HTMLInputElement;

    form.addEventListener('submit', async (event) => {
      event.preventDefault();
      boton.disabled = true;

      const datosFormulario = new FormData(form);
      const objetoFormulario = Object.fromEntries(datosFormulario.entries());

      if (objetoFormulario.contrase√±a_nueva !== objetoFormulario.contrase√±a_repetida) {
        alert("La nueva contrase√±a no coincide. Por favor, introduce dos veces la nueva contrase√±a.");
        boton.disabled = false;
        return;
      }

      await fetch('/cambiar_contase√±a', {
        method: 'POST',
        body: JSON.stringify(objetoFormulario),
        headers: {
          'Content-Type': 'application/json'
        }
      });

      boton.disabled = false;
    });
  });
</script>
